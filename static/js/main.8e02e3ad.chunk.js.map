{"version":3,"sources":["Start.js","Cell.js","data.js","App.js","index.js"],"names":["Start","_ref","StartStyles","handleStart","react_default","a","createElement","className","type","onClick","Cell","props","stylesColor","backgroundColor","1","2","3","value","style","order","index","state","handleClick","data","id","cellcolor","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","cells","counter","reset","players","player1","player2","bind","assertThisInitialized","event","_this2","position","target","closest","getAttribute","setState","prevState","map","cell","push","prompt","countBack","pop","combinations","i","length","_combinations$i","slicedToArray","b","c","_this3","key","win","checkForWinner","src_Start","every","player","handleBack","concat","handleReset","Component","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.8e02e3ad.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Start = ({ StartStyles, handleStart}) => {\r\n\r\n    return (\r\n        <div>\r\n            <button className={StartStyles} type=\"button\" onClick={ handleStart }>Start</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Start;","import React from 'react';\r\n\r\nexport default function Cell(props) {\r\n    const colors = {\r\n        1: 'red',\r\n        2: 'yellow',\r\n        3: 'white'\r\n    }\r\n\r\n    const stylesColor = {\r\n        backgroundColor: colors[props.value],\r\n    };\r\n\r\n    return (\r\n        <div style={stylesColor} \r\n            className=\"Cell\" \r\n            order={props.index} \r\n            state={props.value} \r\n            onClick={props.handleClick} \r\n        />\r\n    )\r\n}\r\n\r\n\r\n","const data =[\r\n    {\r\n        id: 0,\r\n        cellcolor: 0\r\n    },\r\n    {\r\n        id: 1,\r\n        cellcolor: 0\r\n    },\r\n    {\r\n        id: 2,\r\n        cellcolor: 0\r\n    },\r\n    {\r\n        id: 3,\r\n        cellcolor: 0\r\n    },\r\n    {\r\n        id: 4,\r\n        cellcolor: 0\r\n    },\r\n    {\r\n        id: 5,\r\n        cellcolor: 0\r\n    },\r\n    {\r\n        id: 6,\r\n        cellcolor: 0\r\n    },\r\n    {\r\n        id: 7,\r\n        cellcolor: 0\r\n    },\r\n    {\r\n        id: 8,\r\n        cellcolor: 0\r\n    },\r\n]\r\n\r\nexport default data;","import React, { Component } from \"react\";\r\nimport Start from \"./Start\";\r\nimport Cell from \"./Cell\";\r\nimport data from \"./data\";\r\n\r\nexport default class App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            cells: data,\r\n            counter: 0,\r\n            reset: false,         \r\n            players: [],\r\n            player1: [],\r\n            player2: [],\r\n        };\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(event) {\r\n        const position = +event.target.closest(\".Cell\").getAttribute(\"order\");\r\n\r\n        this.setState(prevState => {\r\n            const updatedCells = prevState.cells.map(cell => {\r\n                if (cell.id === position && cell.cellcolor === 0) {\r\n                    if (this.state.counter % 2 === 0) {\r\n                        cell.cellcolor = 1;\r\n                        prevState.player1.push(position);\r\n                    } else if (this.state.counter % 2 !== 0) {\r\n                        cell.cellcolor = 2;\r\n                        prevState.player2.push(position);\r\n                    }\r\n                    prevState.counter++;\r\n                }\r\n                return cell;\r\n            });\r\n\r\n            return {\r\n                cells: updatedCells\r\n            };\r\n        });\r\n    }\r\n\r\n    handleReset() {\r\n        this.setState(prevState => {\r\n            prevState.counter = 0;\r\n\r\n            const updatedCells = prevState.cells.map(cell => {\r\n                cell.cellcolor = 0;\r\n                return cell;\r\n            });\r\n\r\n            return {\r\n                cells: updatedCells\r\n            };\r\n        });\r\n\r\n        this.setState({reset: !this.state.reset})\r\n        \r\n    }\r\n\r\n    handleStart() {\r\n        const player1 = prompt(\"Player #1 name\");\r\n        const player2 = prompt(\"Player #2 name\");\r\n        this.setState({ players: [player1, player2] });\r\n    }\r\n\r\n    handleBack() {\r\n\r\n        this.setState(prevState => {\r\n            let countBack;\r\n\r\n            if (prevState.counter > 0) {\r\n                if (prevState.counter % 2 === 0) {\r\n                    countBack = prevState.player2.pop();\r\n                    prevState.counter--;\r\n                    prevState.cells[countBack].cellcolor = 0;\r\n                } else if (prevState.counter % 2 !== 0) {\r\n                    countBack = prevState.player1.pop();\r\n                    prevState.counter--;\r\n                    prevState.cells[countBack].cellcolor = 0;\r\n                }\r\n            }\r\n\r\n            return prevState;\r\n        });\r\n    }\r\n\r\n    checkForWinner() {\r\n        const combinations = [\r\n            \"012\",\r\n            \"345\",\r\n            \"678\",\r\n            \"036\",\r\n            \"147\",\r\n            \"258\",\r\n            \"048\",\r\n            \"246\"\r\n        ];\r\n\r\n        for (let i = 0; i < combinations.length; i++) {\r\n            const [a, b, c] = combinations[i];\r\n            if (\r\n                this.state.cells[a].cellcolor !== 0 &&\r\n                this.state.cells[a].cellcolor === this.state.cells[b].cellcolor &&\r\n                this.state.cells[b].cellcolor === this.state.cells[c].cellcolor\r\n            ) {\r\n\r\n             return this.state.cells[a].cellcolor === 1 ? 0 : 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n        const cells = this.state.cells.map((cell, index) => (\r\n            <Cell\r\n                key={cell.id}\r\n                index={index}\r\n                value={cell.cellcolor}\r\n                handleClick={this.handleClick}\r\n            />\r\n        ));\r\n            \r\n        const win = this.checkForWinner();\r\n\r\n        return (\r\n            <div>\r\n                <Start\r\n                    StartStyles={(\r\n                        this.state.players.every(player => player) &&\r\n                        this.state.players.length === 2\r\n                            ? \"display_none\"\r\n                            : \"Start_btn btn\")}\r\n\r\n                    handleStart={this.handleStart.bind(this)}\r\n                />\r\n\r\n                <div className={(\r\n                    this.state.players.every(player => player) &&\r\n                        this.state.players.length === 2\r\n                        ? \"display_block\"\r\n                        : \"display_none\")}>\r\n                    <h1\r\n                        className={(this.state.counter === 9)\r\n                                    ? \"Header Header--draw\"\r\n                                    : (win === 1)\r\n                                    ? \"Header bg_yellow\"\r\n                                    : (win === 0)\r\n                                    ? \"Header bg_red\"\r\n                                    :(this.state.counter % 2 === 0)\r\n                                    ? \"Header bg_red\"\r\n                                    : (this.state.counter % 2 !== 0)\r\n                                    && \"Header bg_yellow\"}\r\n                    >\r\n                        {(this.state.counter === 9)\r\n                            ? \"Game over\"\r\n                            : (win === 1)\r\n                            ? this.state.players[1]\r\n                            : (win === 0)\r\n                            ? this.state.players[0]\r\n                            : (this.state.counter % 2 === 0)\r\n                            ? this.state.players[0]\r\n                            : (this.state.counter % 2 !== 0)\r\n                            && this.state.players[1]\r\n                            }\r\n                    </h1>\r\n                    \r\n                    <button className=\"Back_btn btn\" \r\n                            onClick={() => this.handleBack()}\r\n                    >\r\n                        back\r\n                    </button>\r\n\r\n                    <div className=\"Container\">\r\n                        {cells}\r\n                        <div\r\n                            className={\r\n                                    (win === 0)\r\n                                    ? \"Winner Winner--won bg_red\"\r\n                                    : (win === 1)\r\n                                    ? \"Winner Winner--won bg_yellow\"\r\n                                    : (this.state.counter === 9)\r\n                                    ? \"Winner Winner--draw\"\r\n                                    : (this.state.reset)\r\n                                    ? \"display_none Winner\"\r\n                                    : (!this.state.reset)\r\n                                    && \"Winner\"}\r\n                                    \r\n                        >\r\n                            {\r\n                                (win === 0 || win === 1)\r\n                                ? `The ${this.state.players[win]} won the competition` \r\n                                : (this.state.counter === 9)\r\n                                && \"Draw\"\r\n                            }\r\n                        </div>\r\n\r\n                        <button\r\n                            className=\"Reset_btn btn\"\r\n                            onClick={() => this.handleReset()}\r\n                        >\r\n                            {(this.state.counter === 9 || win === 0 || win === 1)\r\n                                ? \"revenge\" \r\n                                : (!this.state.reset || this.state.reset)\r\n                                && \"reset\"\r\n                        }\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// module.hot.accept();\n"],"sourceRoot":""}