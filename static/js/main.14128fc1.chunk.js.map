{"version":3,"sources":["Start.js","Cell.js","data.js","App.js","index.js"],"names":["Start","_ref","startstyle","handleStart","react_default","a","createElement","style","className","type","onClick","Cell","props","stylesColor","backgroundColor","1","2","3","value","order","index","state","handleClick","data","id","cellcolor","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","cells","counter","reset","players","player1","player2","bind","assertThisInitialized","event","_this2","position","target","closest","getAttribute","console","log","setState","prevState","map","cell","push","prompt","countBack","pop","_this3","key","styles","startStyles","winnertStyles","resetText","headerStyles","every","player","length","display","text","combinations","color","i","_combinations$i","slicedToArray","b","c","concat","winner","src_Start","handleBack","handleReset","Component","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.14128fc1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Start = ({ startstyle, handleStart }) => {\r\n    return (\r\n        <div>\r\n            <button style={startstyle} className='Start_btn btn' type=\"button\" onClick={ handleStart }>Start</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Start;","import React from 'react';\r\n\r\nexport default function Cell(props) {\r\n    const colors = {\r\n        1: 'red',\r\n        2: 'yellow',\r\n        3: 'white'\r\n    }\r\n\r\n    const stylesColor = {\r\n        backgroundColor: colors[props.value],\r\n    };\r\n\r\n    return (\r\n        <div style={stylesColor} className='cell' order={props.index} state={props.value} onClick={props.handleClick} />\r\n    )\r\n}\r\n","const data =[\r\n    {\r\n        id: 0,\r\n        cellcolor: 0\r\n    },\r\n    {\r\n        id: 1,\r\n        cellcolor: 0\r\n    },\r\n    {\r\n        id: 2,\r\n        cellcolor: 0\r\n    },\r\n    {\r\n        id: 3,\r\n        cellcolor: 0\r\n    },\r\n    {\r\n        id: 4,\r\n        cellcolor: 0\r\n    },\r\n    {\r\n        id: 5,\r\n        cellcolor: 0\r\n    },\r\n    {\r\n        id: 6,\r\n        cellcolor: 0\r\n    },\r\n    {\r\n        id: 7,\r\n        cellcolor: 0\r\n    },\r\n    {\r\n        id: 8,\r\n        cellcolor: 0\r\n    },\r\n]\r\n\r\nexport default data;","import React, { Component } from \"react\";\r\nimport Start from \"./Start\";\r\nimport Cell from \"./Cell\";\r\nimport data from \"./data\";\r\n\r\nexport default class App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            cells: data,\r\n            counter: 0,\r\n            reset: false,             \r\n            players: [],\r\n            player1: [],\r\n            player2: [],\r\n        };\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(event) {\r\n        const position = +event.target.closest(\".cell\").getAttribute(\"order\");\r\n      console.log(54);\r\n        this.setState(prevState => {\r\n            const updatedCells = prevState.cells.map(cell => {\r\n                if (cell.id === position && cell.cellcolor === 0) {\r\n                    if (this.state.counter % 2 === 0) {\r\n                        cell.cellcolor = 1;\r\n                        prevState.player1.push(position);\r\n                    } else if (this.state.counter % 2 !== 0) {\r\n                        cell.cellcolor = 2;\r\n                        prevState.player2.push(position);\r\n                    }\r\n                    prevState.counter++;\r\n                }\r\n                return cell;\r\n            });\r\n\r\n            return {\r\n                cells: updatedCells\r\n            };\r\n        });\r\n    }\r\n\r\n    handleReset() {\r\n        this.setState(prevState => {\r\n            prevState.counter = 0;\r\n\r\n            const updatedCells = prevState.cells.map(cell => {\r\n                cell.cellcolor = 0;\r\n                return cell;\r\n            });\r\n\r\n            return {\r\n                cells: updatedCells\r\n            };\r\n        });\r\n\r\n        this.setState({reset: !this.state.reset})\r\n        \r\n    }\r\n\r\n    handleStart() {\r\n        const player1 = prompt(\"Player #1 name\");\r\n        const player2 = prompt(\"Player #2 name\");\r\n        this.setState({ players: [player1, player2] });\r\n    }\r\n\r\n    handleBack() {\r\n        this.setState(prevState => {\r\n            let countBack;\r\n\r\n            if (prevState.counter > 0) {\r\n                if (prevState.counter % 2 === 0) {\r\n                    countBack = prevState.player2.pop();\r\n                    prevState.counter--;\r\n                    prevState.cells[countBack].cellcolor = 0;\r\n                } else if (prevState.counter % 2 !== 0) {\r\n                    countBack = prevState.player1.pop();\r\n                    prevState.counter--;\r\n                    prevState.cells[countBack].cellcolor = 0;\r\n                }\r\n            }\r\n\r\n            return prevState;\r\n        });\r\n    }\r\n\r\n    checkForWinner() {\r\n   \r\n    }\r\n\r\n    render() {\r\n        \r\n        const cells = this.state.cells.map((cell, index) => (\r\n            <Cell\r\n                key={cell.id}\r\n                index={index}\r\n                value={cell.cellcolor}\r\n                handleClick={this.handleClick}\r\n            />\r\n        ));\r\n\r\n        \r\n\r\n        const styles = {};\r\n        const startStyles = {};\r\n        const winnertStyles = {};\r\n        let resetText = \"reset\";\r\n        const headerStyles = {}; \r\n\r\n        if (\r\n            this.state.players.every(player => player) &&\r\n            this.state.players.length === 2\r\n        ) {\r\n            styles.display = \"block\";\r\n            startStyles.display = \"none\";\r\n        } else {\r\n            styles.display = \"none\";\r\n            startStyles.display = \"block\";\r\n        }\r\n\r\n        if (this.state.reset) {\r\n            winnertStyles.display = \"none\";\r\n            resetText = \"reset\";\r\n        }\r\n\r\n        if (this.state.counter % 2 === 0) {\r\n            headerStyles.backgroundColor = 'rgb(173, 74, 74)';\r\n            headerStyles.text = this.state.players[0]\r\n        } else if (this.state.counter % 2 !== 0) {\r\n            headerStyles.backgroundColor = 'rgb(233, 247, 30)';\r\n            headerStyles.text = this.state.players[1]\r\n        }\r\n\r\n        const combinations = [\r\n            \"012\",\r\n            \"345\",\r\n            \"678\",\r\n            \"036\",\r\n            \"147\",\r\n            \"258\",\r\n            \"048\",\r\n            \"246\"\r\n        ];\r\n\r\n        if (this.state.counter === 9) {\r\n          winnertStyles.text = \"you played a draw\";\r\n          winnertStyles.display = \"inline-block\";\r\n          winnertStyles.backgroundColor = \"#000\";\r\n          winnertStyles.color = \"#fff\";\r\n          resetText = \"revenge\";\r\n\r\n          headerStyles.backgroundColor = '#000';\r\n          headerStyles.text = \"Game over\";\r\n          headerStyles.backgroundColor = \"#000\";\r\n          headerStyles.color = \"#ffff\";\r\n        }    \r\n\r\n        for (let i = 0; i < combinations.length; i++) {\r\n            const [a, b, c] = combinations[i];\r\n            if (\r\n                this.state.cells[a].cellcolor !== 0 &&\r\n                this.state.cells[a].cellcolor === this.state.cells[b].cellcolor &&\r\n                this.state.cells[b].cellcolor === this.state.cells[c].cellcolor\r\n            ) {\r\n                \r\n                winnertStyles.text = `The ${\r\n                    this.state.players[this.state.cells[a].cellcolor === 1 ? 0 : 1]\r\n                    } won the competition`;\r\n                winnertStyles.display = \"inline-block\";\r\n                winnertStyles.color = \"#fff\";\r\n                resetText = \"revenge\";\r\n                winnertStyles.backgroundColor =\r\n                    this.state.counter % 2 === 0 ? \"#ff0\" : \"#f00\";\r\n                winnertStyles.winner = true;\r\n\r\n                headerStyles.text = this.state.players[this.state.cells[a].cellcolor === 1 ? 0 : 1];\r\n                headerStyles.backgroundColor = (this.state.cells[a].cellcolor)\r\n                    ? 'rgb(173, 74, 74)'\r\n                    : 'rgb(233, 247, 30)';\r\n\r\n            }\r\n            \r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Start\r\n                    startstyle={startStyles}\r\n                    handleStart={this.handleStart.bind(this)}\r\n                />\r\n\r\n                <div style={styles}>\r\n                    <h1\r\n                        style={headerStyles}\r\n                        className=\"App_header\"\r\n                    >\r\n                        {headerStyles.text}\r\n                    </h1>\r\n                    <button className=\"Back_btn btn\" onClick={() => this.handleBack()}>\r\n                        back\r\n                    </button>\r\n\r\n                    <div className=\"container\">\r\n                        {cells}\r\n                        <div\r\n                            style={winnertStyles}\r\n                            className=\"winner\"\r\n                        >\r\n                            {winnertStyles.text}\r\n                        </div>\r\n\r\n                        <button\r\n                            className=\"Reset_btn btn\"\r\n                            onClick={() => this.handleReset()}\r\n                        >\r\n                            {resetText}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n// console.log(Math.round(Math.random(0, 8) * 10));\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// module.hot.accept();\n"],"sourceRoot":""}